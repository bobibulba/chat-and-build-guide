---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Deploying Your ChatAndBuild Project">
	<div class="container">
		<h1>Deploying Your <span class="text-gradient">ChatAndBuild</span> Project</h1>
		<p class="intro">Once you've built your application with ChatAndBuild, the next step is to deploy it so others can access it online. This guide walks you through the deployment process, from preparation to going live.</p>
		
		<div class="tip">
			<strong>Tip:</strong> Before deploying, make sure your application is fully tested and all features are working as expected.
		</div>
		
		<h2>Understanding Deployment</h2>
		<p>Deployment is the process of making your application available on the internet for others to use. When you deploy your ChatAndBuild project, you're essentially:</p>
		<ol>
			<li>Preparing your application files for production use</li>
			<li>Uploading these files to a hosting service</li>
			<li>Configuring the hosting service to serve your application</li>
			<li>Optionally, connecting your application to a custom domain name</li>
		</ol>
		
		<h2>Deployment Options</h2>
		<p>ChatAndBuild supports several deployment options, each with its own advantages. Here are the most popular options:</p>
		
		<div class="deployment-options">
			<div class="card">
				<h3>Netlify</h3>
				<p><strong>Best for:</strong> Static websites and single-page applications</p>
				<p><strong>Pros:</strong> Free tier, automatic deployments, custom domains, form handling</p>
				<p>Netlify is one of the easiest platforms for deploying web applications, especially those built with modern frameworks.</p>
			</div>
			
			<div class="card">
				<h3>Vercel</h3>
				<p><strong>Best for:</strong> Next.js applications and other React-based projects</p>
				<p><strong>Pros:</strong> Optimized for React, serverless functions, preview deployments</p>
				<p>Vercel is created by the team behind Next.js and offers excellent support for React applications.</p>
			</div>
			
			<div class="card">
				<h3>GitHub Pages</h3>
				<p><strong>Best for:</strong> Simple static websites</p>
				<p><strong>Pros:</strong> Free, integrated with GitHub, simple setup</p>
				<p>GitHub Pages is a great option for personal projects, portfolios, and documentation sites.</p>
			</div>
			
			<div class="card">
				<h3>Heroku</h3>
				<p><strong>Best for:</strong> Full-stack applications with backend requirements</p>
				<p><strong>Pros:</strong> Supports various languages and frameworks, database integration</p>
				<p>Heroku is ideal for applications that require server-side processing or databases.</p>
			</div>
		</div>
		
		<h2>Step-by-Step Deployment Guide</h2>
		<p>Let's walk through the process of deploying your ChatAndBuild project to Netlify, one of the most popular and user-friendly options:</p>
		
		<div class="step-container">
			<div class="step">
				<div class="step-number">1</div>
				<div class="step-content">
					<h3>Prepare Your Project for Deployment</h3>
					<p>Ask ChatAndBuild to prepare your project for deployment:</p>
					<div class="example-prompt">
						<p>"I'd like to deploy my project to Netlify. Can you help me prepare it for deployment?"</p>
					</div>
					<p>ChatAndBuild will optimize your project for production, which may include:</p>
					<ul>
						<li>Minifying code (removing unnecessary characters)</li>
						<li>Optimizing images</li>
						<li>Creating a production build</li>
						<li>Generating any necessary configuration files</li>
					</ul>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">2</div>
				<div class="step-content">
					<h3>Download Your Project Files</h3>
					<div class="step-content">
					<p>ChatAndBuild will provide an option to download your project files. Click the download button to get a ZIP file containing all your project files.</p>
					<div class="image-container">
						<img src="/images/download-project.png" alt="Downloading project files from ChatAndBuild" />
					</div>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">3</div>
				<div class="step-content">
					<h3>Create a Netlify Account</h3>
					<p>If you don't already have one, you'll need to create a Netlify account:</p>
					<ol>
						<li>Go to <a href="https://www.netlify.com" target="_blank">netlify.com</a></li>
						<li>Click "Sign up"</li>
						<li>You can sign up with GitHub, GitLab, Bitbucket, or email</li>
					</ol>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">4</div>
				<div class="step-content">
					<h3>Deploy to Netlify</h3>
					<p>Once you have a Netlify account, you can deploy your project:</p>
					<ol>
						<li>Log in to your Netlify account</li>
						<li>Go to the "Sites" tab</li>
						<li>Drag and drop your project folder (or the ZIP file you downloaded) onto the designated area</li>
						<li>Netlify will automatically detect your project settings and begin the deployment process</li>
					</ol>
					<div class="image-container">
						<img src="/images/netlify-deploy.png" alt="Deploying to Netlify by drag and drop" />
					</div>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">5</div>
				<div class="step-content">
					<h3>Configure Your Site</h3>
					<p>After the initial deployment, you can configure your site settings:</p>
					<ol>
						<li>Click on your newly deployed site in the Netlify dashboard</li>
						<li>Go to "Site settings"</li>
						<li>You can change your site name (which affects the URL) under "General" > "Site details" > "Change site name"</li>
						<li>The default URL will be something like <code>your-project-name.netlify.app</code></li>
					</ol>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">6</div>
				<div class="step-content">
					<h3>Set Up a Custom Domain (Optional)</h3>
					<p>If you want to use your own domain name instead of the default Netlify subdomain:</p>
					<ol>
						<li>Go to "Domain management" in your site settings</li>
						<li>Click "Add custom domain"</li>
						<li>Enter your domain name and follow the instructions to verify ownership and set up DNS</li>
					</ol>
					<div class="tip">
						<strong>Tip:</strong> You'll need to purchase a domain name from a domain registrar (like Namecheap, GoDaddy, or Google Domains) before you can set up a custom domain.
					</div>
				</div>
			</div>
		</div>
		
		<h2>Deploying to Other Platforms</h2>
		<p>The process for deploying to other platforms is similar, but with some platform-specific steps. You can ask ChatAndBuild for specific instructions for your chosen platform:</p>
		
		<div class="example-prompt">
			<p>"Can you help me deploy my project to Vercel/GitHub Pages/Heroku instead?"</p>
		</div>
		
		<h2>Handling Backend and Database Deployments</h2>
		<p>If your application includes a backend or database, the deployment process will be more complex. Here's what you need to know:</p>
		
		<div class="card">
			<h3>Backend Deployment</h3>
			<p>For applications with server-side code (Node.js, Python, etc.), you'll need a hosting platform that supports your backend language:</p>
			<ul>
				<li><strong>Heroku:</strong> Supports multiple languages and frameworks</li>
				<li><strong>Vercel:</strong> Good for serverless functions and Next.js API routes</li>
				<li><strong>Netlify Functions:</strong> Serverless functions that work well with Netlify-hosted frontends</li>
			</ul>
			<p>Ask ChatAndBuild for specific instructions based on your backend technology:</p>
			<div class="example-prompt">
				<p>"My project has a Node.js backend. How should I deploy it?"</p>
			</div>
		</div>
		
		<div class="card">
			<h3>Database Deployment</h3>
			<p>If your application uses a database, you'll need to:</p>
			<ol>
				<li>Choose a database hosting provider (like MongoDB Atlas, Supabase, or Heroku Postgres)</li>
				<li>Create a database instance</li>
				<li>Configure your application to connect to the hosted database</li>
				<li>Ensure your database credentials are securely stored (using environment variables)</li>
			</ol>
			<p>Ask ChatAndBuild for guidance specific to your database:</p>
			<div class="example-prompt">
				<p>"My app uses MongoDB. How do I set it up for production?"</p>
			</div>
		</div>
		
		<h2>Post-Deployment Tasks</h2>
		<p>After deploying your application, there are a few important tasks to complete:</p>
		
		<div class="step-container">
			<div class="step">
				<div class="step-number">1</div>
				<div class="step-content">
					<h3>Test Your Deployed Application</h3>
					<p>Thoroughly test your application in the production environment to ensure everything works as expected. Sometimes issues can appear in production that weren't present during development.</p>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">2</div>
				<div class="step-content">
					<h3>Set Up Analytics (Optional)</h3>
					<p>Consider adding analytics to track how users interact with your application. Google Analytics is a popular free option.</p>
					<div class="example-prompt">
						<p>"Can you help me add Google Analytics to my deployed site?"</p>
					</div>
				</div>
			</div>
			
			<div class="step">
				<div class="step-number">3</div>
				<div class="step-content">
					<h3>Configure Continuous Deployment (Optional)</h3>
					<p>If you plan to make updates to your application, setting up continuous deployment can streamline the process. This typically involves connecting your hosting platform to a Git repository.</p>
				</div>
			</div>
		</div>
		
		<div class="warning">
			<strong>Important:</strong> Always keep a backup of your project files, even after deployment. This ensures you can make changes or redeploy if needed.
		</div>
		
		<h2>Troubleshooting Deployment Issues</h2>
		<p>If you encounter issues during deployment, here are some common problems and solutions:</p>
		
		<div class="card">
			<h3>Build Failures</h3>
			<p><strong>Problem:</strong> The deployment fails during the build process.</p>
			<p><strong>Solution:</strong> Check the build logs provided by your hosting platform for specific error messages. Common issues include missing dependencies or configuration errors.</p>
			<div class="example-prompt">
				<p>"My Netlify deployment is failing with this error: [error message]. Can you help me fix it?"</p>
			</div>
		</div>
		
		<div class="card">
			<h3>Missing Assets</h3>
			<p><strong>Problem:</strong> Images, styles, or scripts are missing in the deployed version.</p>
			<p><strong>Solution:</strong> Ensure all file paths are correct and use relative paths rather than absolute paths when referencing assets.</p>
		</div>
		
		<div class="card">
			<h3>API Connection Issues</h3>
			<p><strong>Problem:</strong> Your frontend can't connect to your backend API.</p>
			<p><strong>Solution:</strong> Check that your API URLs are correctly configured for production and that CORS settings allow requests from your frontend domain.</p>
		</div>
		
		<div class="next-steps">
			<h2>Congratulations!</h2>
			<p>You've successfully deployed your ChatAndBuild project! Your application is now live on the internet for others to use and enjoy.</p>
			<p>Remember, you can always make updates to your application by returning to ChatAndBuild, making your changes, and redeploying.</p>
			<p>If you need help with any aspect of deployment, don't hesitate to ask ChatAndBuild for assistance.</p>
			<a href="/examples" class="btn">Explore More Examples</a>
		</div>
	</div>
</Layout>

<style>
	.intro {
		font-size: 1.2rem;
		margin-bottom: 2rem;
	}
	
	.deployment-options {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
		gap: 1.5rem;
		margin: 2rem 0;
	}
	
	.example-prompt {
		background-color: rgba(var(--primary), 0.1);
		border-radius: 8px;
		padding: 1rem;
		margin: 1rem 0;
		border-left: 4px solid rgb(var(--primary));
	}
	
	.example-prompt p {
		margin: 0;
		font-style: italic;
	}
	
	ol, ul {
		margin-left: 1.5rem;
		margin-bottom: 1.5rem;
	}
	
	li {
		margin-bottom: 0.5rem;
	}
	
	.next-steps {
		background-color: rgba(var(--primary), 0.1);
		border-radius: 8px;
		padding: 2rem;
		margin-top: 3rem;
		text-align: center;
	}
	
	.next-steps .btn {
		margin-top: 1rem;
	}
</style>
